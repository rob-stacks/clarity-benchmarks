{
  "+": [
    {
      "calls": 100,
      "duration": {
        "nanos": 559070,
        "secs": 0
      },
      "expression": "+ ([SymbolicExpression { expr: LiteralValue(Int(1)), id: 12 }, SymbolicExpression { expr: LiteralValue(Int(1)), id: 13 }, SymbolicExpression { expr: LiteralValue(Int(1)), id: 14 }, SymbolicExpression { expr: LiteralValue(Int(1)), id: 15 }])",
      "instructions": 839964
    },
    {
      "calls": 100,
      "duration": {
        "nanos": 678174,
        "secs": 0
      },
      "expression": "+ ([SymbolicExpression { expr: LiteralValue(Int(1)), id: 3 }, SymbolicExpression { expr: LiteralValue(Int(1)), id: 4 }])",
      "instructions": 631341
    },
    {
      "calls": 100,
      "duration": {
        "nanos": 595028,
        "secs": 0
      },
      "expression": "+ ([SymbolicExpression { expr: LiteralValue(Int(1)), id: 7 }, SymbolicExpression { expr: LiteralValue(Int(1)), id: 8 }, SymbolicExpression { expr: LiteralValue(Int(1)), id: 9 }])",
      "instructions": 736623
    }
  ],
  "to-ascii?": [
    {
      "calls": 100,
      "duration": {
        "nanos": 584107,
        "secs": 0
      },
      "expression": "to-ascii? ([SymbolicExpression { expr: LiteralValue(Int(1)), id: 18 }])",
      "instructions": 643985
    },
    {
      "calls": 100,
      "duration": {
        "nanos": 571788,
        "secs": 0
      },
      "expression": "to-ascii? ([SymbolicExpression { expr: LiteralValue(Int(10)), id: 21 }])",
      "instructions": 645600
    },
    {
      "calls": 100,
      "duration": {
        "nanos": 565488,
        "secs": 0
      },
      "expression": "to-ascii? ([SymbolicExpression { expr: LiteralValue(Int(100)), id: 24 }])",
      "instructions": 645505
    },
    {
      "calls": 100,
      "duration": {
        "nanos": 598350,
        "secs": 0
      },
      "expression": "to-ascii? ([SymbolicExpression { expr: LiteralValue(Int(1000)), id: 27 }])",
      "instructions": 645945
    },
    {
      "calls": 100,
      "duration": {
        "nanos": 543338,
        "secs": 0
      },
      "expression": "to-ascii? ([SymbolicExpression { expr: LiteralValue(Int(10000)), id: 30 }])",
      "instructions": 649497
    }
  ]
}